const _randId=()=>"ID"+Math.random().toString().replace(".",""),_sleep=a=>new Promise(b=>setTimeout(()=>{b()},a)),_diff=(a,b)=>b.filter(b=>!a.includes(b)),_intersect=(a,b)=>b.filter(b=>a.includes(b));async function _load(a){return new Promise((b,c)=>{import(`/js/modules/${a}.mjs`).then(a=>{b(a)}).catch(a=>{c(a)})})}async function _file(a){return new Promise((b,c)=>{try{fetch(new URL(`/data/${a}`,window.top.location).href).then(a=>{200!==a.status&&c(),b(a.json())}).catch(a=>{c(a)})}catch(a){c(a)}})}async function _garbage(){return new Promise(a=>{bindedElementIds.length||a();const b=[];document.querySelectorAll("[data-uid]").forEach(a=>{b.push(a.dataset.uid)});const c=_diff(b,bindedElementIds);c.length&&(ModStates.unregister(c),bindedElementIds=_intersect(b,bindedElementIds),console.log("BINDEDELEMENTIDS:",{bindedElementIds})),a()})}const ModStates=await _load("states.min").then(a=>a).catch(()=>null),ModMustache=(await _load("mustache").then(a=>a).catch(()=>null)).default;let bindedElementIds=[];const binded=async a=>{if(void 0!==a.dataset.isbinded)return;const b=_randId();a.dataset.uid=b,a.dataset.isbinded=1;const c=a.dataset.binded,d=a.dataset.templated,e=a.tagName,f=d===void 0?null:0===d.indexOf("@")?document.querySelector(`template[data-template="${d.replace("@","")}"]`).innerHTML:atob(d);null!==f&&ModMustache.parse(f);const g=b=>{switch(e){case"INPUT":a.value="string"==typeof b?b:"";break;default:if(null===b&&(a.innerHTML=""),null!==f){let b={};c.split(",").forEach(a=>{a=a.trim();let c=ModStates.getStates(a);if(-1!==a.indexOf(".")){const d=(b,e)=>{let a=e.shift();e.length?(void 0===b[a]&&(b[a]={}),d(b[a],e)):b[a]=c};d(b,a.split("."))}else b[a]=c}),a.innerHTML=ModMustache.render(f,b)}else a.innerHTML=JSON.stringify(b);}};c.split(",").forEach(a=>{a=a.trim();const c=a.length?ModStates.getStates(a):ModStates.getStates();null!==c&&g(c),ModStates.register(a,b,a=>g(a))}),bindedElementIds.push(b)},binders=async a=>{try{if(a.dataset.isbinders!==void 0)return;a.dataset.isbinders=1;const b=a.dataset.binders;if(-1!==b.indexOf("@"))await ModStates.setStates(a.value,await _file(b.replace("@","")));else{const c=JSON.parse(atob(b));c.hasOwnProperty("functions")&&Object.keys(c.functions).forEach(a=>{let b=c.functions[a];console.log(`FUNCTION-MAPPING[${a}]:\n ${b} \n`),c.functions[a]=()=>(a,c)=>Function("render","text",`
                            "use strict";
                            //console.log(render, text);
                            ${b};
                        `)(c,a)}),ModStates.setStates(a.value,c)}}catch(a){console.error(a)}},binding=async a=>{if(void 0!==a.dataset.isbinding)return;a.dataset.isbinding=1;const b=a.dataset.binding;if(a.value.length)await ModStates.setStates(b,a.value,!0);else{const c=ModStates.getStates(b);null!==c&&(a.value=c)}a.oninput=async a=>await ModStates.setStates(b,a.target.value)},action=async a=>{if(void 0!==a.dataset.isaction)return;a.dataset.isaction;const b=a.dataset.action,c=a.dataset.prop;switch(b){case"delete":a.onclick=async()=>await ModStates.delStates(c);break;case"undo":a.onclick=async()=>await ModStates.undoStates();break;default:}},gstates=async(a)=>await ModStates.getStates(a),sstates=async(a,b)=>{await ModStates.setStates(a,b)},obsstates=async(a,b)=>{await ModStates.observe(a,b)};(async()=>{console.log("STARTER-STATES",{states:await ModStates.getStates(),ModMustache})})(),(async()=>{let a=async()=>{await _garbage(),await _sleep(1e4),a()};await _sleep(1e4),a()})();export{binded,binders,binding,action,gstates,sstates,obsstates};